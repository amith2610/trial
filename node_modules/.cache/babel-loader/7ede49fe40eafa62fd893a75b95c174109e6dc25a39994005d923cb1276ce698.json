{"ast":null,"code":"var _jsxFileName = \"/Users/amithreddy/Desktop/MyPortfolio/src/components/Projects.js\";\nimport React from 'react';\nimport { Box, Container, Typography, Grid, Paper, Button, Stack } from '@mui/material';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projects = [{\n  title: 'Graph Neural Network Ensemble for Node Classification',\n  technologies: 'Technologies: Python, PyTorch Geometric, Graph Neural Networks, Ensemble Learning',\n  description: ['Developed an ensemble of Graph Neural Networks (GNN) models, including GCN, GAT, APPNP, and GraphSAGE, to classify nodes in large-scale graphs with millions of nodes and edges, achieving high accuracy and robustness in real-world datasets.', 'Improved model performance through advanced data preprocessing, feature engineering, and majority voting ensemble techniques, increasing validation accuracy to over 90% and enhancing prediction stability by 30% on imbalanced datasets.'],\n  github: '',\n  demo: ''\n}, {\n  title: 'Neural-Enhanced LoRa Signal Decoding (NENLoRa) for Low SNR Environments',\n  technologies: 'Technologies: MATLAB, PyTorch, Neural Networks, Signal Processing',\n  description: ['Implemented and fine-tuned a neural-enhanced decoding model (NENLoRa) for LoRa signals, achieving a 50% reduction in Signal Error Rate (SER) under low SNR conditions, with an SER under 10% at -17dB.', 'Enhanced signal decoding accuracy through targeted fine-tuning on a specified SNR range (-20dB to -10dB), surpassing baseline models by 25% and achieving reliable demodulation critical for IoT and low-power communication networks.'],\n  github: '',\n  demo: ''\n}];\nconst Projects = () => /*#__PURE__*/_jsxDEV(Box, {\n  id: \"projects\",\n  sx: {\n    py: 10,\n    bgcolor: 'background.default'\n  },\n  children: /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            color: '#555',\n            fontWeight: 500,\n            textAlign: 'right'\n          },\n          children: \"Browse My Recent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          sx: {\n            fontWeight: 700,\n            textAlign: 'right',\n            fontSize: 36\n          },\n          children: \"Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      justifyContent: \"center\",\n      children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            borderRadius: 6,\n            border: '2px solid #e0e0e0',\n            p: 4,\n            height: '100%',\n            background: '#fff',\n            boxShadow: 'none',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              fontWeight: 700,\n              mb: 1,\n              textAlign: 'center'\n            },\n            children: project.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              color: '#555',\n              mb: 1,\n              textAlign: 'center',\n              fontStyle: 'italic'\n            },\n            children: project.technologies\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"ul\",\n            sx: {\n              textAlign: 'left',\n              mb: 3\n            },\n            children: project.description.map((point, i) => /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"li\",\n              sx: {\n                color: '#222',\n                mb: 0.5,\n                fontSize: 16\n              },\n              children: point\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            spacing: 2,\n            sx: {\n              justifyContent: 'center',\n              width: '100%'\n            },\n            children: [project.github && /*#__PURE__*/_jsxDEV(Button, {\n              startIcon: /*#__PURE__*/_jsxDEV(GitHubIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 32\n              }, this),\n              href: project.github,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              sx: {\n                borderRadius: 999,\n                px: 3,\n                fontWeight: 600,\n                border: '2px solid #111',\n                color: '#111',\n                background: '#fff',\n                boxShadow: 'none',\n                '&:hover': {\n                  background: '#f5f5f5',\n                  borderColor: '#111'\n                }\n              },\n              children: \"Github\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), project.demo && /*#__PURE__*/_jsxDEV(Button, {\n              href: project.demo,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              sx: {\n                borderRadius: 999,\n                px: 3,\n                fontWeight: 600,\n                background: '#222',\n                color: '#fff',\n                boxShadow: 'none',\n                '&:hover': {\n                  background: '#111'\n                }\n              },\n              children: \"Live Demo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 3\n}, this);\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","Box","Container","Typography","Grid","Paper","Button","Stack","GitHubIcon","jsxDEV","_jsxDEV","projects","title","technologies","description","github","demo","Projects","id","sx","py","bgcolor","children","maxWidth","display","justifyContent","mb","variant","color","fontWeight","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","container","spacing","map","project","index","item","xs","md","borderRadius","border","p","height","background","boxShadow","flexDirection","alignItems","fontStyle","component","point","i","direction","width","startIcon","href","target","rel","px","borderColor","_c","$RefreshReg$"],"sources":["/Users/amithreddy/Desktop/MyPortfolio/src/components/Projects.js"],"sourcesContent":["import React from 'react';\nimport { Box, Container, Typography, Grid, Paper, Button, Stack } from '@mui/material';\nimport GitHubIcon from '@mui/icons-material/GitHub';\n\nconst projects = [\n  {\n    title: 'Graph Neural Network Ensemble for Node Classification',\n    technologies: 'Technologies: Python, PyTorch Geometric, Graph Neural Networks, Ensemble Learning',\n    description: [\n      'Developed an ensemble of Graph Neural Networks (GNN) models, including GCN, GAT, APPNP, and GraphSAGE, to classify nodes in large-scale graphs with millions of nodes and edges, achieving high accuracy and robustness in real-world datasets.',\n      'Improved model performance through advanced data preprocessing, feature engineering, and majority voting ensemble techniques, increasing validation accuracy to over 90% and enhancing prediction stability by 30% on imbalanced datasets.',\n    ],\n    github: '',\n    demo: '',\n  },\n  {\n    title: 'Neural-Enhanced LoRa Signal Decoding (NENLoRa) for Low SNR Environments',\n    technologies: 'Technologies: MATLAB, PyTorch, Neural Networks, Signal Processing',\n    description: [\n      'Implemented and fine-tuned a neural-enhanced decoding model (NENLoRa) for LoRa signals, achieving a 50% reduction in Signal Error Rate (SER) under low SNR conditions, with an SER under 10% at -17dB.',\n      'Enhanced signal decoding accuracy through targeted fine-tuning on a specified SNR range (-20dB to -10dB), surpassing baseline models by 25% and achieving reliable demodulation critical for IoT and low-power communication networks.',\n    ],\n    github: '',\n    demo: '',\n  },\n];\n\nconst Projects = () => (\n  <Box id=\"projects\" sx={{ py: 10, bgcolor: 'background.default' }}>\n    <Container maxWidth=\"lg\">\n      <Box sx={{ display: 'flex', justifyContent: 'flex-end', mb: 2 }}>\n        <Box>\n          <Typography variant=\"body1\" sx={{ color: '#555', fontWeight: 500, textAlign: 'right' }}>\n            Browse My Recent\n          </Typography>\n          <Typography variant=\"h2\" sx={{ fontWeight: 700, textAlign: 'right', fontSize: 36 }}>\n            Projects\n          </Typography>\n        </Box>\n      </Box>\n      <Grid container spacing={4} justifyContent=\"center\">\n        {projects.map((project, index) => (\n          <Grid item xs={12} md={6} key={index}>\n            <Paper\n              sx={{\n                borderRadius: 6,\n                border: '2px solid #e0e0e0',\n                p: 4,\n                height: '100%',\n                background: '#fff',\n                boxShadow: 'none',\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n              }}\n            >\n              <Typography variant=\"h5\" sx={{ fontWeight: 700, mb: 1, textAlign: 'center' }}>\n                {project.title}\n              </Typography>\n              <Typography variant=\"body2\" sx={{ color: '#555', mb: 1, textAlign: 'center', fontStyle: 'italic' }}>\n                {project.technologies}\n              </Typography>\n              <Box component=\"ul\" sx={{ textAlign: 'left', mb: 3 }}>\n                {project.description.map((point, i) => (\n                  <Typography component=\"li\" key={i} sx={{ color: '#222', mb: 0.5, fontSize: 16 }}>\n                    {point}\n                  </Typography>\n                ))}\n              </Box>\n              <Stack direction=\"row\" spacing={2} sx={{ justifyContent: 'center', width: '100%' }}>\n                {project.github && (\n                  <Button\n                    startIcon={<GitHubIcon />}\n                    href={project.github}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    sx={{\n                      borderRadius: 999,\n                      px: 3,\n                      fontWeight: 600,\n                      border: '2px solid #111',\n                      color: '#111',\n                      background: '#fff',\n                      boxShadow: 'none',\n                      '&:hover': { background: '#f5f5f5', borderColor: '#111' },\n                    }}\n                  >\n                    Github\n                  </Button>\n                )}\n                {project.demo && (\n                  <Button\n                    href={project.demo}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    sx={{\n                      borderRadius: 999,\n                      px: 3,\n                      fontWeight: 600,\n                      background: '#222',\n                      color: '#fff',\n                      boxShadow: 'none',\n                      '&:hover': { background: '#111' },\n                    }}\n                  >\n                    Live Demo\n                  </Button>\n                )}\n              </Stack>\n            </Paper>\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  </Box>\n);\n\nexport default Projects; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}